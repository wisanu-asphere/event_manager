@model project_eventmanager.Models.event_user

@{
    ViewBag.Title = "User";
}
<script>
    $(function () {
        'use strict'
        var _area = $("#Area1");
        var _area2 = $("#Area2");
        var _area3 = $("#Area3");
        var _area4 = $("#Area4");

        if (!_area2.val()) getArea2(_area, $('#Area2'));

        $('#Area1').change(function () {
            var _area = $("#Area1").val();
            _area2.empty();
            _area3.empty();
            _area4.empty();
            getArea2(_area, $('#Area2'));
        });

        $('#Area2').change(function () {
            var _area = $("#Area2").val();
            _area3.empty();
            _area4.empty();
            getArea2(_area, $('#Area3'));
        });

        $('#Area3').change(function () {
            var _area = $("#Area3").val();
            _area4.empty();
            getArea2(_area, $('#Area4'));
        });
           function getArea2(_id, obj) {
            obj.empty();
            var url ='@Url.Action("getArea2", "tag_event_conf")'+ "?id=" + _id;
            obj.append(
                $('<option/>', {
                    value: "",
                    text: "Please Select"
                }));
            $.get(url, null, function (data) {
                for (var i = 0; i <= (data.length - 1); i++) {

                    obj.append(
                        $('<option/>', {
                            value: data[i].AreaID,
                            text: data[i].AreaName
                        }));
                }

            });
        }
    });
</script>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="card w-100">
                <div class="card-header">
                    <h4 class="card-title">Edit User</h4>
                    <div class="card-tools">
                        <div class="card-tools">
                            @Html.ActionLink("Back to List", "Index")
                        </div>
                    </div>
                </div>

                <div class="card-body h-100">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.RecordId)
                            @Html.HiddenFor(model => model.CreateBy)
                            @Html.HiddenFor(model => model.CreateDate)
                            @Html.HiddenFor(model => model.isUserOfSystem)
                            <div class="form-group row">
                                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Area1, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @*@Html.EditorFor(model => model.Area1, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.DropDownList("Area1", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Area1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Area2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownList("Area2", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Area2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Area3, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownList("Area3", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Area3, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Area4, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownList("Area4", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Area4, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">

                                    @Html.DropDownList("Position", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.isEnable, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.isEnable)
                                        @Html.ValidationMessageFor(model => model.isEnable, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.isReciveEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.isReciveEmail)
                                        @Html.ValidationMessageFor(model => model.isReciveEmail, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-md-offset-2 col-md-3"></div>
                                <div class="col-md-offset-2 col-md-4">
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                </div>
                                <div class="col-md-offset-2 col-md-5 text-right">
                                    @Html.ActionLink("Back to List", "Index")
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>